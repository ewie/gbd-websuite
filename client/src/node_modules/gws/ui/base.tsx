import * as React from 'react';

export interface UiProps {
}

export class UiState {
    hasFocus: boolean;
}

export class UiPureComponent<P extends UiProps> extends React.PureComponent<P> {

}

export class UiComponent<P extends UiProps, S extends UiState> extends React.Component<P, S> {
    state: S = {hasFocus: false} as S;
    blurTimer: any = 0;

    protected gotFocus() {
        this.setState({hasFocus: true});
    }

    protected lostFocus() {
        this.setState({hasFocus: false});
    }

    componentWillUnmount() {
        clearTimeout(this.blurTimer);
    }

    focusEvents() {
        let t = this;
        return {
            onFocus() {
                clearTimeout(t.blurTimer);
                t.gotFocus();
            },

            onBlur() {
                clearTimeout(t.blurTimer);
                t.blurTimer = setTimeout(() => t.lostFocus(), 200);
            }
        }
    }
}
