import * as React from 'react';

import {IconButton} from './buttons';

import * as tools from '../tools';

interface DialogProps {
    className?: string;
    whenClosed?: any;
    title?: string;
    style?: object;
}

export class Dialog extends React.PureComponent<DialogProps> {
    render() {
        let cls = tools.cls(
            'uiDialog',
            this.props.title && 'withTitle',
            this.props.whenClosed && 'withCloseButton',
            this.props.className);

        return <div className='uiDialogBackdrop'>
            <div {...cls}>
                {this.props.whenClosed && <IconButton
                    className='uiDialogCloseButton'
                    whenTouched={() => this.props.whenClosed()}
                />}

                {this.props.title && <div className="uiDialogTitle">{this.props.title}</div>}

                <div className='uiDialogContent'>
                    {this.props.children}
                </div>
            </div>
        </div>
    }
}




export class Popup extends React.PureComponent<DialogProps> {
    ref: React.RefObject<HTMLDivElement>;

    componentDidMount() {
        tools.nextTick(() => this.ref.current && (this.ref.current.className += ' isActive'));
    }

    render() {
        this.ref = React.createRef();

        let close = (evt: React.MouseEvent) => {
            let ok = this.props.whenClosed
                && evt.target
                && evt.target === this.ref.current;

            if (ok)
                this.props.whenClosed();
        };

        return <div className='uiPopupBackdrop' onClick={close} ref={this.ref}>
            <div {...tools.cls('uiPopup', this.props.className)} style={this.props.style}>
                {this.props.children}
            </div>
        </div>
    }
}

export class Panel extends React.PureComponent<DialogProps> {
    render() {
        return <div {...tools.cls('uiPanel', this.props.whenClosed && 'withCloseButton', this.props.className)}>
            {this.props.whenClosed && <IconButton
                className='uiPanelCloseButton'
                whenTouched={() => this.props.whenClosed()}
            />}
            <div className='uiPanelContent'>
                {this.props.children}
            </div>
        </div>
    }
}
