import * as React from 'react';

import {IconButton} from './buttons';

import * as tools from '../tools';

interface DialogProps {
    className?: string;
    whenClosed?: any;
}

export class Dialog extends React.PureComponent<DialogProps> {
    render() {
        return <div className='uiDialogBackdrop'>
            <div {...tools.cls('uiDialog', this.props.whenClosed && 'withCloseButton', this.props.className)}>
                {this.props.whenClosed && <IconButton
                    className='uiDialogCloseButton'
                    whenTouched={() => this.props.whenClosed()}
                />}
                <div className='uiDialogContent'>
                    {this.props.children}
                </div>
            </div>
        </div>
    }
}

export class Panel extends React.PureComponent<DialogProps> {
    render() {
        return <div {...tools.cls('uiPanel', this.props.whenClosed && 'withCloseButton', this.props.className)}>
                {this.props.whenClosed && <IconButton
                    className='uiPanelCloseButton'
                    whenTouched={() => this.props.whenClosed()}
                />}
                <div className='uiPanelContent'>
                    {this.props.children}
                </div>
            </div>
    }
}
