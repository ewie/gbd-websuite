import * as React from 'react';

import {UiComponent, UiState, UiInputProps} from './base';
import {Button} from './button';
import * as util from './util';


export interface FileInputProps extends UiInputProps<FileList> {
    multiple?: boolean;
    accept?: string;
    listFormat?: (files: FileList) => React.ReactNode,
}


export class FileInput extends UiComponent<FileInputProps, UiState> {

    ref: React.RefObject<HTMLInputElement>;

    constructor(props) {
        super(props);
        this.ref = React.createRef();
    }

    onChange(e: React.SyntheticEvent<any>) {
        if (this.props.whenChanged)
            this.props.whenChanged(e.currentTarget.files);
    }

    render() {
        let input = null;

        if (!this.props.disabled) {
            input = <input
                type="file"
                accept={this.props.accept}
                disabled={this.props.disabled}
                multiple={this.props.multiple}
                onChange={e => this.onChange(e)}
                ref={this.ref}
                style={{display: 'none'}}
            />;
        }

        let hasFiles = this.props.value && this.props.value.length > 0;

        let listFormat = this.props.listFormat;

        if (!listFormat)
            listFormat = (files) => {
                if (!files || !files.length)
                    return null;

                let fs = [].slice.call(this.props.value, 0);

                return <div>{fs.map(f => {
                    let name = f.name.slice(0, 50),
                        size = (f.size / 1024).toFixed(2) + 'K';
                    return <p key={name}>{name} ({size})</p>
                })}</div>

            };

        let cls = util.cls(
            'uiFileInput',
            this.props.className,
            this.state.hasFocus && 'hasFocus',
            hasFiles && 'hasFiles',
            this.props.disabled && 'isDisabled');

        return <div {...cls}>
            {input}
            <Button
                className='uiFileInputButton'
                disabled={this.props.disabled}
                tooltip={this.props.tooltip}
                whenTouched={() => this.ref.current.click()}
            />
            <div className='uiFileInputList'>
                {listFormat(this.props.value)}
            </div>
        </div>;
    }
}

